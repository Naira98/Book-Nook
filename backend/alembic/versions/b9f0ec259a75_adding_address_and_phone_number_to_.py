"""adding address and phone number to orders and return order and unique constraint in book details

Revision ID: b9f0ec259a75
Revises: ba02c178a283
Create Date: 2025-07-31 15:14:52.307017

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'b9f0ec259a75'
down_revision: Union[str, Sequence[str], None] = 'ba02c178a283'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('orders', sa.Column('address', sa.String(), nullable=False))
    op.add_column('orders', sa.Column('phone_number', sa.String(), nullable=False))
    op.add_column('return_orders', sa.Column('address', sa.String(), nullable=False))
    op.add_column('return_orders', sa.Column('phone_number', sa.String(), nullable=False))
    op.create_unique_constraint(
        "uq_book_id_status",  # Name for the constraint
        "books",              # Table name
        ["book_id", "status"] # Columns to be constrained
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('return_orders', 'phone_number')
    op.drop_column('return_orders', 'address')
    op.drop_column('orders', 'phone_number')
    op.drop_column('orders', 'address')
    op.drop_constraint("uq_book_id_status", "books", type_="unique")
    # ### end Alembic commands ###
