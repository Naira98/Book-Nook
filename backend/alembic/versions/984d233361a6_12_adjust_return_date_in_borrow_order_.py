"""12_adjust return date in borrow order book and add stripe session id to user

Revision ID: 984d233361a6
Revises: e78728d40358
Create Date: 2025-08-16 07:48:27.139587

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '984d233361a6'
down_revision: Union[str, Sequence[str], None] = 'e78728d40358'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('books', 'cover_img',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.add_column('borrow_order_books', sa.Column('actual_return_date', sa.DateTime(timezone=True), nullable=True))
    op.add_column('borrow_order_books', sa.Column('expected_return_date', sa.DateTime(timezone=True), nullable=True))
    op.drop_column('borrow_order_books', 'return_date')
    op.drop_index(op.f('ix_user_id'), table_name='carts')
    op.create_index('ix_cart_id', 'carts', ['id', 'user_id'], unique=False)
    op.add_column('orders', sa.Column('pickup_date', sa.DateTime(), nullable=True))
    op.add_column('orders', sa.Column('pickup_type', sa.Enum('SITE', 'COURIER', name='pickuptype'), nullable=False))
    op.drop_column('orders', 'pick_up_date')
    op.drop_column('orders', 'pick_up_type')
    op.add_column('return_orders', sa.Column('pickup_type', sa.Enum('SITE', 'COURIER', name='pickuptype'), nullable=False))
    op.drop_column('return_orders', 'pick_up_type')
    op.drop_constraint(op.f('uq_yourtable_session'), 'sessions', type_='unique')
    op.create_unique_constraint('uq_session', 'sessions', ['session'])
    op.alter_column('transactions', 'description',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.drop_index(op.f('ix_transactions_id'), table_name='transactions')
    op.drop_column('transactions', 'updated_at')
    op.add_column('users', sa.Column('stripe_session_id', sa.String(length=255), nullable=True))
    op.create_unique_constraint('uq_user_stripe_session_id', 'users', ['stripe_session_id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint('uq_user_stripe_session_id', 'users', type_='unique')
    op.drop_column('users', 'stripe_session_id')
    op.add_column('transactions', sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True))
    op.create_index(op.f('ix_transactions_id'), 'transactions', ['id'], unique=False)
    op.alter_column('transactions', 'description',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.drop_constraint('uq_session', 'sessions', type_='unique')
    op.create_unique_constraint(op.f('uq_yourtable_session'), 'sessions', ['session'], postgresql_nulls_not_distinct=False)
    op.add_column('return_orders', sa.Column('pick_up_type', postgresql.ENUM('SITE', 'COURIER', name='pickuptype'), autoincrement=False, nullable=False))
    op.drop_column('return_orders', 'pickup_type')
    op.add_column('orders', sa.Column('pick_up_type', postgresql.ENUM('SITE', 'COURIER', name='pickuptype'), autoincrement=False, nullable=False))
    op.add_column('orders', sa.Column('pick_up_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    op.drop_column('orders', 'pickup_type')
    op.drop_column('orders', 'pickup_date')
    op.drop_index('ix_cart_id', table_name='carts')
    op.create_index(op.f('ix_user_id'), 'carts', ['user_id'], unique=False)
    op.add_column('borrow_order_books', sa.Column('return_date', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True))
    op.drop_column('borrow_order_books', 'expected_return_date')
    op.drop_column('borrow_order_books', 'actual_return_date')
    op.alter_column('books', 'cover_img',
               existing_type=sa.VARCHAR(),
               nullable=True)
    # ### end Alembic commands ###
