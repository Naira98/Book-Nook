"""18_update notifications schema

Revision ID: ee24dddc0fdf
Revises: b1d26ec441d8
Create Date: 2025-09-05 15:17:43.408931

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'ee24dddc0fdf'
down_revision: Union[str, Sequence[str], None] = 'b1d26ec441d8'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_cmetadata_gin'), table_name='langchain_pg_embedding', postgresql_using='gin')
    op.drop_table('langchain_pg_embedding')
    op.drop_table('langchain_pg_collection')
    op.add_column('notifications', sa.Column('data', postgresql.JSONB(astext_type=sa.Text()), nullable=False))
    op.add_column('notifications', sa.Column('read_at', sa.DateTime(timezone=True), nullable=True))
    op.drop_constraint(op.f('notifications_order_id_fkey'), 'notifications', type_='foreignkey')
    op.drop_constraint(op.f('notifications_promo_code_id_fkey'), 'notifications', type_='foreignkey')
    op.drop_constraint(op.f('notifications_return_order_id_fkey'), 'notifications', type_='foreignkey')
    op.drop_column('notifications', 'order_id')
    op.drop_column('notifications', 'promo_code_id')
    op.drop_column('notifications', 'status')
    op.drop_column('notifications', 'return_order_id')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('notifications', sa.Column('return_order_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('notifications', sa.Column('status', postgresql.ENUM('READ', 'UNREAD', name='notificationstatus'), autoincrement=False, nullable=False))
    op.add_column('notifications', sa.Column('promo_code_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('notifications', sa.Column('order_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.create_foreign_key(op.f('notifications_return_order_id_fkey'), 'notifications', 'return_orders', ['return_order_id'], ['id'])
    op.create_foreign_key(op.f('notifications_promo_code_id_fkey'), 'notifications', 'promo_codes', ['promo_code_id'], ['id'])
    op.create_foreign_key(op.f('notifications_order_id_fkey'), 'notifications', 'orders', ['order_id'], ['id'])
    op.drop_column('notifications', 'read_at')
    op.drop_column('notifications', 'data')
    op.create_table('langchain_pg_collection',
    sa.Column('uuid', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('cmetadata', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('uuid', name='langchain_pg_collection_pkey'),
    sa.UniqueConstraint('name', name='langchain_pg_collection_name_key', postgresql_include=[], postgresql_nulls_not_distinct=False),
    postgresql_ignore_search_path=False
    )
    op.create_table('langchain_pg_embedding',
    sa.Column('id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('collection_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('embedding', sa.NullType(), autoincrement=False, nullable=True),
    sa.Column('document', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('cmetadata', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['collection_id'], ['langchain_pg_collection.uuid'], name=op.f('langchain_pg_embedding_collection_id_fkey'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('langchain_pg_embedding_pkey'))
    )
    op.create_index(op.f('ix_cmetadata_gin'), 'langchain_pg_embedding', ['cmetadata'], unique=False, postgresql_using='gin')
    # ### end Alembic commands ###
