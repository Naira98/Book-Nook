"""add email_verification_token and_update_forget_pass_token

Revision ID: a31fceebc8ca
Revises: ed0b6689531a
Create Date: 2025-08-03 17:20:02.990185

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'a31fceebc8ca'
down_revision: Union[str, Sequence[str], None] = 'ed0b6689531a'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('users', sa.Column('forget_password_token', sa.String(), nullable=True))
    op.add_column('users', sa.Column('email_verification_token', sa.String(), nullable=True))
    op.drop_constraint(op.f('users_reset_token_key'), 'users', type_='unique')
    op.create_unique_constraint(None, 'users', ['forget_password_token'])
    op.drop_column('users', 'reset_token_expires_at')
    op.drop_column('users', 'reset_token')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('users', sa.Column('reset_token', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('users', sa.Column('reset_token_expires_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'users', type_='unique')
    op.create_unique_constraint(op.f('users_reset_token_key'), 'users', ['reset_token'], postgresql_nulls_not_distinct=False)
    op.drop_column('users', 'email_verification_token')
    op.drop_column('users', 'forget_password_token')
    # ### end Alembic commands ###
